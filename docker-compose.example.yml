version: "3.9"

services:
  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: porty-sql-prod
    environment:
      SA_PASSWORD: "[PASSWORD_SA]"
      ACCEPT_EULA: "Y"
    ports:
      - "1435:1433"
    volumes:
      - sql_data_prod:/var/opt/mssql
    networks:
      - web-prod
    restart: always

  api:
    image: mcr.microsoft.com/dotnet/sdk:8.0
    container_name: porty-api-prod
    working_dir: /app
    volumes:
      - ./api:/app
      - ~/.aspnet/https:/https:ro
    environment:
      ASPNETCORE_ENVIRONMENT: "Production"
      ASPNETCORE_URLS: "https://0.0.0.0:8080"
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/aspnetapp.pfx
      ASPNETCORE_Kestrel__Certificates__Default__Password: "devcert"
      ConnectionStrings__DefaultConnection: "Server=db;Database=[DB_SERVER];User Id=[DB_USER];Password=[DB_PASSWORD];TrustServerCertificate=True;MultipleActiveResultSets=True"
    depends_on:
      - db
    ports:
      - "8080:8080"
    command: ["dotnet", "run", "--no-launch-profile", "--urls", "https://0.0.0.0:8080"]
    networks:
      - web-prod
    restart: always

  front:
    image: node:20-alpine
    container_name: porty-front-prod
    working_dir: /app
    volumes:
      - ./front:/app
      - ~/.aspnet/https:/https:ro
    environment:
      VITE_API_URL: "https://localhost:8080"
    command: >
      sh -c "
      npm install &&
      npm run build &&
      npx serve -s dist -l 443
      --ssl-cert /https/cert.crt
      --ssl-key /https/cert.key
      "
    ports:
      - "443:443"
    depends_on:
      - api
    networks:
      - web-prod
    restart: always

networks:
  web-prod:

volumes:
  sql_data_prod:
