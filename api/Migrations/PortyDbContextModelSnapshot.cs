// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Data;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(PortyDbContext))]
    partial class PortyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("api.Data.Models.Buisness", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("T_BUISNESS", (string)null);
                });

            modelBuilder.Entity("api.Data.Models.Career", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Comments")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RefBuisness")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("RefBuisness");

                    b.ToTable("T_CAREER", (string)null);
                });

            modelBuilder.Entity("api.Data.Models.CareerSkill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("RefCareer")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RefSkill")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RefCareer");

                    b.HasIndex("RefSkill");

                    b.ToTable("T_CAREER_SKILL", (string)null);
                });

            modelBuilder.Entity("api.Data.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("T_CATEGORY", (string)null);
                });

            modelBuilder.Entity("api.Data.Models.Certificate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Url")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("T_CERTIFICATE", (string)null);
                });

            modelBuilder.Entity("api.Data.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Url")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("T_PROJECT", (string)null);
                });

            modelBuilder.Entity("api.Data.Models.ProjectSkill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RefProject")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RefSkill")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RefProject");

                    b.HasIndex("RefSkill");

                    b.ToTable("T_PROJECT_SKILL", (string)null);
                });

            modelBuilder.Entity("api.Data.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Description")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("T_ROLE", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("74737d58-a69f-4df7-bf9a-777297a4d6d6"),
                            Description = "Utilisateur standard",
                            Name = "User"
                        },
                        new
                        {
                            Id = new Guid("a3a52661-a5a1-4d13-a765-48543eb06cfe"),
                            Description = "Administrateur",
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("api.Data.Models.School", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("T_SCHOOL", (string)null);
                });

            modelBuilder.Entity("api.Data.Models.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Certification")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RefCategory")
                        .HasMaxLength(128)
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RefCategory");

                    b.ToTable("T_SKILL", (string)null);
                });

            modelBuilder.Entity("api.Data.Models.Study", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Comments")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RefSchool")
                        .HasMaxLength(128)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("RefSchool");

                    b.ToTable("T_STUDY", (string)null);
                });

            modelBuilder.Entity("api.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(1)
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("createdAt")
                        .HasColumnOrder(9)
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("email")
                        .HasColumnOrder(5);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("firstName")
                        .HasColumnOrder(2);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("lastName")
                        .HasColumnOrder(3);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("password")
                        .HasColumnOrder(6);

                    b.Property<string>("Pepper")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("pepper")
                        .HasColumnOrder(7);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phoneNumber")
                        .HasColumnOrder(4);

                    b.Property<Guid>("RefRole")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("refRole")
                        .HasColumnOrder(8);

                    b.Property<Guid?>("TokenAccountCreated")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("tokenAccountCreated")
                        .HasColumnOrder(10);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RefRole");

                    b.ToTable("T_USER", (string)null);
                });

            modelBuilder.Entity("api.Data.Models.Career", b =>
                {
                    b.HasOne("api.Data.Models.Buisness", "Buisness")
                        .WithMany("Careers")
                        .HasForeignKey("RefBuisness")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buisness");
                });

            modelBuilder.Entity("api.Data.Models.CareerSkill", b =>
                {
                    b.HasOne("api.Data.Models.Career", "Career")
                        .WithMany("CareerSkills")
                        .HasForeignKey("RefCareer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Data.Models.Skill", "Skill")
                        .WithMany("CareerSkills")
                        .HasForeignKey("RefSkill")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Career");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("api.Data.Models.ProjectSkill", b =>
                {
                    b.HasOne("api.Data.Models.Project", "Project")
                        .WithMany("ProjectSkills")
                        .HasForeignKey("RefProject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Data.Models.Skill", "Skill")
                        .WithMany("ProjectSkills")
                        .HasForeignKey("RefSkill")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("api.Data.Models.Skill", b =>
                {
                    b.HasOne("api.Data.Models.Category", "Category")
                        .WithMany("Skills")
                        .HasForeignKey("RefCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("api.Data.Models.Study", b =>
                {
                    b.HasOne("api.Data.Models.School", "School")
                        .WithMany("Studies")
                        .HasForeignKey("RefSchool")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("api.Data.Models.User", b =>
                {
                    b.HasOne("api.Data.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RefRole")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_T_USER_refRole__T_ROLE_id");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("api.Data.Models.Buisness", b =>
                {
                    b.Navigation("Careers");
                });

            modelBuilder.Entity("api.Data.Models.Career", b =>
                {
                    b.Navigation("CareerSkills");
                });

            modelBuilder.Entity("api.Data.Models.Category", b =>
                {
                    b.Navigation("Skills");
                });

            modelBuilder.Entity("api.Data.Models.Project", b =>
                {
                    b.Navigation("ProjectSkills");
                });

            modelBuilder.Entity("api.Data.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("api.Data.Models.School", b =>
                {
                    b.Navigation("Studies");
                });

            modelBuilder.Entity("api.Data.Models.Skill", b =>
                {
                    b.Navigation("CareerSkills");

                    b.Navigation("ProjectSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
